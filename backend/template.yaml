AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31

Resources:
  TasksTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: tasks
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      SSESpecification:
        SSEEnabled: true
      AttributeDefinitions:
        - AttributeName: taskId
          AttributeType: S
      KeySchema:
        - AttributeName: taskId
          KeyType: HASH
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES

  TasksApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: TasksApi
      StageName: prod
      Cors:
        AllowOrigin: "' *'"
        AllowMethods: "'OPTIONS,GET,POST,PUT,DELETE'"
        AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"

  OptionsHandlerFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: optionsHandler.handler
      Runtime: nodejs20.x
      MemorySize: 128
      Timeout: 5
      CodeUri: ./dist
      Events:
        OptionsTask:
          Type: Api
          Properties:
            Path: /tasks
            Method: OPTIONS
            RestApiId: !Ref TasksApi
        OptionsTaskWithId:
          Type: Api
          Properties:
            Path: /tasks/{id}
            Method: OPTIONS
            RestApiId: !Ref TasksApi

  GetTaskFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: getTask.handler
      Runtime: nodejs20.x
      MemorySize: 128
      Timeout: 10
      CodeUri: ./dist
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TasksTable
      Events:
        GetTask:
          Type: Api
          Properties:
            Path: /tasks/{id}
            Method: GET
            RestApiId: !Ref TasksApi

  GetAllTasksFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: getAllTasks.handler
      Runtime: nodejs20.x
      MemorySize: 128
      Timeout: 10
      CodeUri: ./dist
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TasksTable
      Events:
        GetAllTasks:
          Type: Api
          Properties:
            Path: /tasks
            Method: GET
            RestApiId: !Ref TasksApi

  CreateTaskFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: createTask.handler
      Runtime: nodejs20.x
      MemorySize: 128
      Timeout: 10
      CodeUri: ./dist
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TasksTable
      Events:
        CreateTask:
          Type: Api
          Properties:
            Path: /tasks
            Method: POST
            RestApiId: !Ref TasksApi

  UpdateTaskFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: updateTask.handler
      Runtime: nodejs20.x
      MemorySize: 128
      Timeout: 10
      CodeUri: ./dist
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TasksTable
      Events:
        UpdateTask:
          Type: Api
          Properties:
            Path: /tasks/{id}
            Method: PUT
            RestApiId: !Ref TasksApi

  DeleteTaskFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: deleteTask.handler
      Runtime: nodejs20.x
      MemorySize: 128
      Timeout: 10
      CodeUri: ./dist
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TasksTable
      Events:
        DeleteTask:
          Type: Api
          Properties:
            Path: /tasks/{id}
            Method: DELETE
            RestApiId: !Ref TasksApi

Outputs:
  ApiUrl:
    Description: "API Gateway endpoint URL"
    Value: !Sub "https://${TasksApi}.execute-api.${AWS::Region}.amazonaws.com/prod/"
